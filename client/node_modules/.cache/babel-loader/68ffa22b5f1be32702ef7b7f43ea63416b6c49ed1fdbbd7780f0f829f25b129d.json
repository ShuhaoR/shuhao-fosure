{"ast":null,"code":"// src/components/Login.js\nimport React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{useTranslation}from\"react-i18next\";// Import useTranslation hook\nimport\"../styles/styles.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=_ref=>{let{setIsLoggedIn}=_ref;const[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[error,setError]=useState(\"\");const navigate=useNavigate();const{t}=useTranslation();// Initialize translation hook\nconst handleLogin=async()=>{try{console.log(\"Sending login request:\",{email,password});const response=await fetch(\"/api/auth/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email,password})});const data=await response.json();console.log(\"Login response:\",data);if(response.ok){setIsLoggedIn(true);localStorage.setItem(\"isLoggedIn\",\"true\");navigate(\"/\");}else{setError(data.message);}}catch(err){console.error(\"Network error:\",err);setError(t(\"network_error\"));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:t(\"login\")}),\" \",/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),placeholder:t(\"email\")// Translated Email\n}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),placeholder:t(\"password\")// Translated Password\n}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogin,children:t(\"login\")}),\" \",error&&/*#__PURE__*/_jsx(\"p\",{children:error})]});};export default Login;","map":{"version":3,"names":["React","useState","useNavigate","useTranslation","jsx","_jsx","jsxs","_jsxs","Login","_ref","setIsLoggedIn","email","setEmail","password","setPassword","error","setError","navigate","t","handleLogin","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","message","err","className","children","type","value","onChange","e","target","placeholder","onClick"],"sources":["/Users/shuhaoruan/shuhao-fosure/client/src/components/Login.js"],"sourcesContent":["// src/components/Login.js\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\"; // Import useTranslation hook\nimport \"../styles/styles.css\";\n\nconst Login = ({ setIsLoggedIn }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  const { t } = useTranslation(); // Initialize translation hook\n\n  const handleLogin = async () => {\n    try {\n      console.log(\"Sending login request:\", { email, password });\n\n      const response = await fetch(\"/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n\n      console.log(\"Login response:\", data);\n\n      if (response.ok) {\n        setIsLoggedIn(true);\n        localStorage.setItem(\"isLoggedIn\", \"true\");\n        navigate(\"/\");\n      } else {\n        setError(data.message);\n      }\n    } catch (err) {\n      console.error(\"Network error:\", err);\n      setError(t(\"network_error\"));\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <h1>{t(\"login\")}</h1> {/* Translated Login */}\n      <input\n        type=\"email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        placeholder={t(\"email\")} // Translated Email\n      />\n      <input\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder={t(\"password\")} // Translated Password\n      />\n      <button onClick={handleLogin}>{t(\"login\")}</button>{\" \"}\n      {/* Translated Login Button */}\n      {error && <p>{error}</p>}\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}