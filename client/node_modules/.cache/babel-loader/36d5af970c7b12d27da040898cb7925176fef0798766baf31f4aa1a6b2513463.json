{"ast":null,"code":"var _jsxFileName = \"/Users/shuhaoruan/shuhao-fosure/client/src/components/Login.js\",\n  _s = $RefreshSig$();\n// src/components/Login.js\n\nimport React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport \"../styles/login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setIsLoggedIn\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    t\n  } = useTranslation();\n  const handleLogin = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setIsLoggedIn(true);\n        localStorage.setItem(\"isLoggedIn\", \"true\");\n        navigate(\"/\");\n      } else {\n        setError(data.message);\n      }\n    } catch (err) {\n      setError(t(\"network_error\"));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: t(\"登录\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: t(\"电子邮件\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: t(\"密码\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: t(\"登录\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [t(\"还没有账户？\"), \" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: t(\"注册\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"TSjO2hC3HqlX3dJRBgwdBXPu7mw=\", false, function () {\n  return [useNavigate, useTranslation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Link","useTranslation","jsxDEV","_jsxDEV","Login","setIsLoggedIn","_s","email","setEmail","password","setPassword","error","setError","navigate","t","handleLogin","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","to","_c","$RefreshReg$"],"sources":["/Users/shuhaoruan/shuhao-fosure/client/src/components/Login.js"],"sourcesContent":["// src/components/Login.js\n\nimport React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport \"../styles/login.css\";\n\nconst Login = ({ setIsLoggedIn }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  const { t } = useTranslation();\n\n  const handleLogin = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5001/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setIsLoggedIn(true);\n        localStorage.setItem(\"isLoggedIn\", \"true\");\n        navigate(\"/\");\n      } else {\n        setError(data.message);\n      }\n    } catch (err) {\n      setError(t(\"network_error\"));\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <h1>{t(\"登录\")}</h1>\n      <input\n        type=\"email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        placeholder={t(\"电子邮件\")}\n      />\n      <input\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder={t(\"密码\")}\n      />\n      <button onClick={handleLogin}>{t(\"登录\")}</button>\n      {error && <p>{error}</p>}\n      <p>\n        {t(\"还没有账户？\")} <Link to=\"/register\">{t(\"注册\")}</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}