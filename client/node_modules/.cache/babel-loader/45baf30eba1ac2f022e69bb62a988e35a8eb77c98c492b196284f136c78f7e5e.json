{"ast":null,"code":"var _jsxFileName = \"/Users/shuhaoruan/shuhao-fosure/client/src/components/FundList.js\",\n  _s = $RefreshSig$();\n// src/components/FundList.js\nimport React, { useState, useEffect } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { useTranslation } from \"react-i18next\";\nimport \"../styles/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FundList = () => {\n  _s();\n  var _funds$, _funds$2;\n  const {\n    t\n  } = useTranslation();\n  const [funds, setFunds] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"/path/to/DataSource.xlsx\");\n        const data = await response.arrayBuffer();\n        const workbook = XLSX.read(data, {\n          type: \"array\"\n        });\n        const sheetName = workbook.SheetNames[0];\n        const worksheet = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName], {\n          header: 1\n        }); // Keep headers\n        setFunds(worksheet);\n      } catch (error) {\n        console.error(\"Error loading file:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  };\n  const filteredFunds = funds.filter((row, index) => {\n    if (index === 0) return true; // Keep the header row\n    const fundCode = row[0] ? row[0].toString() : \"\"; // Fund code is assumed to be in the first column\n    const fundName = row[1] ? row[1].toString() : \"\"; // Fund name is assumed to be in the second column\n    return fundCode.includes(searchTerm) || fundName.includes(searchTerm);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: t(\"基金列表\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: t(\"搜索基金\"),\n      value: searchTerm,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowX: \"auto\",\n        maxHeight: \"400px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: (_funds$ = funds[0]) === null || _funds$ === void 0 ? void 0 : _funds$.map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: header\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredFunds.length > 1 ? filteredFunds.slice(1).map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cell\n            }, cellIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: ((_funds$2 = funds[0]) === null || _funds$2 === void 0 ? void 0 : _funds$2.length) || 1,\n              children: t(\"无匹配结果\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(FundList, \"1jmnc/rXJ04uwtZHIx+gfyIxrHU=\", false, function () {\n  return [useTranslation];\n});\n_c = FundList;\nexport default FundList;\nvar _c;\n$RefreshReg$(_c, \"FundList\");","map":{"version":3,"names":["React","useState","useEffect","XLSX","useTranslation","jsxDEV","_jsxDEV","FundList","_s","_funds$","_funds$2","t","funds","setFunds","searchTerm","setSearchTerm","fetchData","response","fetch","data","arrayBuffer","workbook","read","type","sheetName","SheetNames","worksheet","utils","sheet_to_json","Sheets","header","error","console","handleSearch","event","target","value","filteredFunds","filter","row","index","fundCode","toString","fundName","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","style","overflowX","maxHeight","map","length","slice","cell","cellIndex","colSpan","_c","$RefreshReg$"],"sources":["/Users/shuhaoruan/shuhao-fosure/client/src/components/FundList.js"],"sourcesContent":["// src/components/FundList.js\nimport React, { useState, useEffect } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { useTranslation } from \"react-i18next\";\nimport \"../styles/styles.css\";\n\nconst FundList = () => {\n  const { t } = useTranslation();\n  const [funds, setFunds] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"/path/to/DataSource.xlsx\");\n        const data = await response.arrayBuffer();\n        const workbook = XLSX.read(data, { type: \"array\" });\n        const sheetName = workbook.SheetNames[0];\n        const worksheet = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName], {\n          header: 1,\n        }); // Keep headers\n        setFunds(worksheet);\n      } catch (error) {\n        console.error(\"Error loading file:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleSearch = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const filteredFunds = funds.filter((row, index) => {\n    if (index === 0) return true; // Keep the header row\n    const fundCode = row[0] ? row[0].toString() : \"\"; // Fund code is assumed to be in the first column\n    const fundName = row[1] ? row[1].toString() : \"\"; // Fund name is assumed to be in the second column\n    return fundCode.includes(searchTerm) || fundName.includes(searchTerm);\n  });\n\n  return (\n    <div>\n      <h1>{t(\"基金列表\")}</h1>\n      <input\n        type=\"text\"\n        placeholder={t(\"搜索基金\")}\n        value={searchTerm}\n        onChange={handleSearch}\n      />\n      <div style={{ overflowX: \"auto\", maxHeight: \"400px\" }}>\n        <table>\n          <thead>\n            <tr>\n              {funds[0]?.map((header, index) => (\n                <th key={index}>{header}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {filteredFunds.length > 1 ? (\n              filteredFunds.slice(1).map((row, index) => (\n                <tr key={index}>\n                  {row.map((cell, cellIndex) => (\n                    <td key={cellIndex}>{cell}</td>\n                  ))}\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={funds[0]?.length || 1}>{t(\"无匹配结果\")}</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default FundList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}